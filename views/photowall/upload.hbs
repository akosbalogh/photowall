<div class="page-upload d-flex flex-column">
    <div class="styled-file-container flex-fill">
        <button class="btn btn-primary btn-lg btn-block">Upload</button>
        <input id="file-input" type="file" name="name" multiple accept="image/*"/>
    </div>
    <div id="success-alert" class="alert alert-success d-none" role="alert">
        <i class="fa fa-check"></i> Uploaded successfully
    </div>
    <div id="error-alert" class="alert alert-danger d-none" role="alert">
        <i class="fa fa-exclamation-triangle"></i> Error
    </div>
</div>

<script src="/scripts/resizer/index.js"></script>
<script type="application/javascript">
    if (window.File && window.FileReader && window.FormData) {
        const $inputField = document.getElementById('file-input');
        const $successAlert = document.getElementById('success-alert');
        const $errorAlert = document.getElementById('error-alert');

        const resizeConfig = {
            quality: 0.90,
            maxWidth: 1920,
            maxHeight: 1080,
            autoRotate: true
        };

        $inputField.addEventListener('change', e => {
            if (!$successAlert.classList.contains('d-none')) {
                $successAlert.classList.add('d-none');
            }

            if (!$errorAlert.classList.contains('d-none')) {
                $errorAlert.classList.add('d-none');
            }

            const inputFiles = Array.from(e.target.files);

            Promise.all(
                    inputFiles.map(file =>
                            BrowserImageResizer.readAndCompressImage(file, resizeConfig)
                    )
            ).then(resizedFiles => {
                const formData = new FormData();

                let fileIdx = 0;
                for (const file of resizedFiles) {
                    if (file && /^image\//i.test(file.type)) {
                        formData.append(`upload${fileIdx++}`, file);
                    }
                }

                fetch(window.location.href, {
                    method: 'POST',
                    body: formData
                }).then(() => {
                    $successAlert.classList.remove('d-none');
                })
                .catch((err) => {
                    $errorAlert.classList.remove('d-none');
                    $errorAlert.innerText = err;
                });

            }).catch((err) => {
                $errorAlert.classList.remove('d-none');
                $errorAlert.innerText = err;
            });
        });
    } else {
        alert("File upload is not supported!");
    }

    document.addEventListener('DOMContentLoaded', () => {
        document.getElementById('file-input').click();
    }, false);
</script>