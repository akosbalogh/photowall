<div id="photos" class="photos">
    <div class="photo-sizer"></div>
    {{#each files}}
        <img src="{{this}}" class="photo" />
    {{/each}}
</div>

{{#if files.length }}
{{else}}
    <div class="no-pics">
        Oh no, no pics.
    </div>
{{/if}}

<div id="qr-code" class="qr-code"></div>

<script src="/scripts/socketio/socket.io.js"></script>
<script src="/scripts/qrcodejs/qrcode.js"></script>
<script src="/scripts/masonry/masonry.pkgd.js"></script>
<script src="/scripts/imagesloaded/imagesloaded.pkgd.js"></script>
<script src="/javascripts/zoomer.js"></script>
<script type="application/javascript">
    enableFullscreenToggle();

    const namespace = "{{namespace}}";

    const $noPics = document.querySelector('.no-pics');
    const $photos = document.getElementById("photos");

    const zoomer = new Zoomer($photos);

    imagesLoaded($photos, () => {
        const masonry = new Masonry($photos, {
            itemSelector: '.photo',
            columnWidth: '.photo-sizer',
            percentPosition: true
        });

        masonry.on('layoutComplete', () => zoomer.retarget());

        const socket = io(`/photowall?room=${namespace}`);

        socket.on('new_file', (filename) => {
            $noPics && $noPics.remove();

            const $newImage = document.createElement('img');
            $newImage.setAttribute("src", filename);
            $newImage.classList.add('photo');
            $photos.insertBefore($newImage, $photos.firstChild);

            $newImage.onload = () => {
                masonry.prepended($newImage);
            };
        });

        zoomer.start();
    });

    const $qrCode = document.getElementById('qr-code');
    new QRCode($qrCode, slashJoin(window.location.href, "upload"));

</script>